{"version":3,"file":"1-timer-OWDZ-bCf.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst btn = document.querySelector('.btn');\nconst dateMinSec = [...document.querySelectorAll('.value')];\nconst input = document.getElementById('datetime-picker');\n\nlet userSelectedDate, userTime, nowTime;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    userSelectedDate = selectedDates[0];\n    userTime = userSelectedDate.getTime();\n    nowTime = Date.now();\n\n    if (userTime < nowTime) {\n      iziToast.show({\n        title: '!',\n        message: 'Please choose a date in the future',\n        color: 'red',\n      });\n      btn.disabled = true;\n    } else {\n      btn.disabled = false;\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nconst timerStart = function () {\n  btn.disabled = true;\n  input.disabled = true;\n  const interID = setInterval(() => {\n    const resultTime = userTime - Date.now();\n    const convertTime = convertMs(resultTime);\n    for (const [text, num] of Object.entries(convertTime)) {\n      dateMinSec.find(el => el.hasAttribute(`data-${text}`)).textContent =\n        addLeadingZero(num);\n    }\n    if (Object.values(convertTime).every(value => Number(value) === 0)) {\n      clearInterval(interID);\n      input.disabled = false;\n    }\n  }, 1000);\n};\nbtn.addEventListener('click', timerStart);\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nflatpickr('#datetime-picker', options);\n"],"names":["btn","dateMinSec","input","userSelectedDate","userTime","nowTime","options","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","timerStart","interID","resultTime","convertTime","text","num","el","addLeadingZero","value","flatpickr"],"mappings":"gDAUA,MAAMA,EAAM,SAAS,cAAc,MAAM,EACnCC,EAAa,CAAC,GAAG,SAAS,iBAAiB,QAAQ,CAAC,EACpDC,EAAQ,SAAS,eAAe,iBAAiB,EAEvD,IAAIC,EAAkBC,EAAUC,EAEhC,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BJ,EAAmBI,EAAc,CAAC,EAClCH,EAAWD,EAAiB,UAC5BE,EAAU,KAAK,MAEXD,EAAWC,GACbG,EAAS,KAAK,CACZ,MAAO,IACP,QAAS,qCACT,MAAO,KACf,CAAO,EACDR,EAAI,SAAW,IAEfA,EAAI,SAAW,EAElB,CACH,EAEA,SAASS,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,MAAMC,EAAa,UAAY,CAC7Bf,EAAI,SAAW,GACfE,EAAM,SAAW,GACjB,MAAMc,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAab,EAAW,KAAK,IAAG,EAChCc,EAAcT,EAAUQ,CAAU,EACxC,SAAW,CAACE,EAAMC,CAAG,IAAK,OAAO,QAAQF,CAAW,EAClDjB,EAAW,KAAKoB,GAAMA,EAAG,aAAa,QAAQF,CAAI,EAAE,CAAC,EAAE,YACrDG,EAAeF,CAAG,EAElB,OAAO,OAAOF,CAAW,EAAE,MAAMK,GAAS,OAAOA,CAAK,IAAM,CAAC,IAC/D,cAAcP,CAAO,EACrBd,EAAM,SAAW,GAEpB,EAAE,GAAI,CACT,EACAF,EAAI,iBAAiB,QAASe,CAAU,EAExC,SAASO,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAC,EAAU,mBAAoBlB,CAAO"}